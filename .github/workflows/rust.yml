name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8 # v2.7.1

      - name: Build
        run: cargo build --verbose --all-features
      - name: Run tests
        run: cargo test --verbose --all-features -- --include-ignored

      - name: Run Clippy
        run: cargo clippy --all-targets
      - name: Run Format Check
        run: cargo fmt --check

  build-stable:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - name: Use stable
        run: patch --fuzz=0 --strip=0 <patches/toolchain-to-stable.patch

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8 # v2.7.1

      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose -- --include-ignored

  check-msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - name: Reset rust-toolchain
        run: rm rust-toolchain.toml

      - name: Get MSRV
        id: msrv
        run: echo "msrv=$(cargo metadata --no-deps --format-version=1 | jq -r ".packages[] | select(.name==\"jbonsai\") | .rust_version")" >> $GITHUB_OUTPUT

      - name: Install Rust
        uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0 # master
        with:
          toolchain: ${{ steps.msrv.outputs.msrv }}

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8 # v2.7.1

      - name: Print version
        run: |
          cargo --version
          rustc --version

      - name: Run test
        run: cargo test --verbose

  coverage:
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly@sha256:0caca04d63b7bc4e91df7f275b020006d490eb3dadf03bfeaeb779858a2c5312
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - name: Generate code coverage
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
